import "./styles.css";
import { ToDoList } from "./toDoCreator.js"

function screenController() {
    const listArray = [];

    const listNav = document.querySelector(".list-nav");
    const pageBody = document.querySelector(".container");

    const defaultList = new ToDoList("Default Project");
    listArray.push(defaultList);
    const newTaskIndexOne = defaultList.addToDo("Default Task 1", "This is a default task, autogenerated on page load.");
    const newTaskIndexTwo = defaultList.addToDo("Default Task 2", "This is a default task, autogenerated on page load.");
    const newTaskIndexThree = defaultList.addToDo("Default Task 3", "This is a default task, autogenerated on page load.");
    const newTaskIndexFour = defaultList.addToDo("Default Task 4", "This is a default task, autogenerated on page load.");


    const displayLists = () => {
        listArray.forEach(list => {
            const navListContainer = document.createElement("div");
            navListContainer.classList.add("nav-list-container");
            navListContainer.id = listArray.indexOf(list);
            listNav.appendChild(navListContainer);

            const navListUl = document.createElement("ul");
            navListContainer.appendChild(navListUl);

            const navListHeaderLi = document.createElement("li");
            navListHeaderLi.classList.add("nav-list-header");
            navListUl.appendChild(navListHeaderLi);

            const div = document.createElement("div");
            div.classList.add("list-inner-flex");
            div.id = listArray.indexOf(list);
            navListHeaderLi.appendChild(div);

            const wrapperAnchor = document.createElement("a");
            wrapperAnchor.href = "#";
            wrapperAnchor.id = listArray.indexOf(list);
            div.appendChild(wrapperAnchor);

            const listLogo = document.createElement("i");
            listLogo.classList.add("fa-solid");
            listLogo.classList.add("fa-hashtag");
            wrapperAnchor.appendChild(listLogo);

            const navListHeader = document.createElement("span");
            navListHeader.textContent = list.Name;
            wrapperAnchor.appendChild(navListHeader);

            div.addEventListener("click", () => clickList(div));
        });
    }

    const displayTasks = () => {

    }

    const addTask = () => {

    }

    const newList = (name) => {
        const list = new ToDoList(name);
        listArray.push(list);
        displayLists();
    }

    const deleteList = (name) => {

    }

    const clickHome = (e) => {
        pageBody.replaceChildren();

        const divList = document.querySelectorAll("div");
        updateActiveClass(divList, e);

        const homeHeader = document.createElement("h2");
        homeHeader.className = "home-header";
        homeHeader.textContent = "Home";
        pageBody.appendChild(homeHeader);
    }

    const clickToday = (e) => {
        pageBody.replaceChildren();

        const divList = document.querySelectorAll("div");
        updateActiveClass(divList, e);

        const todayHeader = document.createElement("h2");
        todayHeader.className = "today-header";
        todayHeader.textContent = "Today's Tasks";
        pageBody.appendChild(todayHeader);
    }

    const clickImportant = (e) => {
        pageBody.replaceChildren();

        const divList = document.querySelectorAll("div");
        updateActiveClass(divList, e);


    }

    const ClickAllTasks = (e) => {
        pageBody.replaceChildren();

        const divList = document.querySelectorAll("div");
        updateActiveClass(divList, e);


    }

    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));

    const updateActiveClass = (divList, clickedElement) => {
        divList.forEach(element => element.classList.remove("active"));
        clickedElement.classList.add("active");
    };
      
    const createPageHeader = (pageName) => {
        const pageHeader = document.createElement("h2");
        pageHeader.className = "page-name";
        pageHeader.textContent = pageName;
        return pageHeader;
    };
      
    const createTaskContainer = (task, index) => {
        const taskContainer = document.createElement("div");
        taskContainer.className = "task-container";
        taskContainer.id = `task-${index}`;
      
        const checkbox = generateCheckbox(index);
        checkbox.id = `checkbox-${index}`;
        checkbox.addEventListener("click", async () => {
          try {
            checkbox.disabled = true;
            taskContainer.classList.add('fade-out');
            await delay(1000);
            const elementToRemove = document.getElementById(`task-${index}`);
            if (elementToRemove) {
              elementToRemove.remove();
              list.deleteToDoItem(index);
            }
          } catch (error) {
            console.error('Error during task removal:', error);
            checkbox.disabled = false;
            taskContainer.classList.remove('fade-out');
          }
        });
      
        const taskWrapper = document.createElement("div");
        taskWrapper.className = "task-wrapper";
      
        const title = document.createElement("h4");
        title.className = "title";
        const description = document.createElement("span");
        description.className = "description";
        const dueDate = document.createElement("span");
        dueDate.className = "dueDate";
        const priority = document.createElement("span");
        priority.className = "priority";
      
        title.textContent = task.title;
        description.textContent = task.description;
      
        taskContainer.appendChild(checkbox);
        taskContainer.appendChild(taskWrapper);
        taskWrapper.appendChild(title);
        taskWrapper.appendChild(description);
        taskWrapper.appendChild(dueDate);
        taskWrapper.appendChild(priority);
      
        return taskContainer;
    };
      
    const createNewTaskButton = () => {
        const newTaskBtn = document.createElement("button");
        newTaskBtn.classList.add("new-task-btn");
        const plusIcon = document.createElement("i");
        plusIcon.classList.add("fa-solid");
        plusIcon.classList.add("fa-plus");
        const btnText = document.createElement("span");
        btnText.textContent = "Add Task";
        newTaskBtn.appendChild(plusIcon);
        newTaskBtn.appendChild(btnText);
        return newTaskBtn;
    };
      
    const clickList = (e) => {
        pageBody.replaceChildren();
      
        const divList = document.querySelectorAll("div");
        updateActiveClass(divList, e);
      
        const list = listArray[e.id];
        const pageHeader = createPageHeader(list.Name);
        pageBody.appendChild(pageHeader);
      
        const taskArray = list.getAllToDoItems();
        taskArray.forEach((task, index) => {
          const taskContainer = createTaskContainer(task, index);
          pageBody.appendChild(taskContainer);
        });
      
        const newTaskBtn = createNewTaskButton();
        pageBody.appendChild(newTaskBtn);
    };

    const clickNewList = (e) => {
        //Show prompt for list title
    }

    const generateCheckbox = (index) => {
        // Checkbox, adapted from https://uiverse.io/mrhyddenn/slippery-bear-64
        // Uses index in a seperate function in order to bypass having to use #ids
        const checkBtn = document.createElement("div");
        checkBtn.className = "check-btn-div";

        const checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.className = 'custom-checkbox';
        checkbox.id = `cbx-${index}`;
        checkbox.style.display = 'none';

        const label = document.createElement('label');
        label.htmlFor = `cbx-${index}`;
        label.className = 'check';

        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
        svg.setAttribute('width', '18px');
        svg.setAttribute('height', '18px');
        svg.setAttribute('viewBox', '0 0 18 18');

        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');
        path.setAttribute('d', 'M1,9 L1,3.5 C1,2 2,1 3.5,1 L14.5,1 C16,1 17,2 17,3.5 L17,14.5 C17,16 16,17 14.5,17 L3.5,17 C2,17 1,16 1,14.5 L1,9 Z');

        const polyline = document.createElementNS('http://www.w3.org/2000/svg', 'polyline');
        polyline.setAttribute('points', '1 9 7 14 15 4');

        svg.appendChild(path);
        svg.appendChild(polyline);
        label.appendChild(svg);
        checkBtn.appendChild(checkbox);
        checkBtn.appendChild(label);

        return checkBtn;
    }


    // Generate Default List
    displayLists();

    //Attach listeners to static sidebar items
    const home = document.querySelector(".home");
    const today = document.querySelector(".today");
    const important = document.querySelector(".important");
    const allTasks = document.querySelector(".all-tasks");

    home.addEventListener("click", () => clickHome(home));
    today.addEventListener("click", () => clickToday(today));
    important.addEventListener("click", () => clickImportant(important));
    allTasks.addEventListener("click", () => ClickAllTasks(allTasks));

}



screenController();